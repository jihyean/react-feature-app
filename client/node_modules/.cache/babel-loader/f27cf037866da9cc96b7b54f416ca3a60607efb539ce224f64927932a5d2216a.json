{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOA\\\\jhk\\\\reactTest\\\\client\\\\src\\\\visChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport vis from 'vis-timeline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTimelineComponent = () => {\n  _s();\n  const timelineContainerRef = useRef(null);\n  let timeline = null;\n  const showVisibleGroups = () => {\n    const visibleGroups = timeline.getVisibleGroups();\n    document.getElementById(\"visibleGroupsContainer\").innerHTML = \"\";\n    document.getElementById(\"visibleGroupsContainer\").innerHTML += visibleGroups;\n  };\n  const now = Date.now();\n  const options = {\n    stack: true,\n    maxHeight: 640,\n    horizontalScroll: false,\n    verticalScroll: true,\n    zoomKey: \"ctrlKey\",\n    start: now - 1000 * 60 * 60 * 24 * 3,\n    end: now + 1000 * 60 * 60 * 24 * 21,\n    orientation: {\n      axis: \"both\",\n      item: \"top\"\n    }\n  };\n  const groups = new vis.DataSet();\n  const items = new vis.DataSet();\n  const count = 300;\n  for (let i = 0; i < count; i++) {\n    const start = now + 1000 * 60 * 60 * 24 * (i + Math.floor(Math.random() * 7));\n    const end = start + 1000 * 60 * 60 * 24 * (1 + Math.floor(Math.random() * 5));\n    groups.add({\n      id: i,\n      content: \"Task \" + i,\n      order: i\n    });\n    items.add({\n      id: i,\n      group: i,\n      start: start,\n      end: end,\n      type: \"range\",\n      content: \"Item \" + i\n    });\n  }\n  useEffect(() => {\n    // create a Timeline\n    timeline = new vis.Timeline(timelineContainerRef.current, null, options);\n    timeline.setGroups(groups);\n    timeline.setItems(items);\n    const debounce = (func, wait = 100) => {\n      let timeout;\n      return function (...args) {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          func.apply(this, args);\n        }, wait);\n      };\n    };\n    const groupFocus = e => {\n      const visibleGroups = timeline.getVisibleGroups();\n      const visibleItems = visibleGroups.reduce((res, groupId) => {\n        const group = timeline.itemSet.groups[groupId];\n        if (group.items) {\n          res = res.concat(Object.keys(group.items));\n        }\n        return res;\n      }, []);\n      timeline.focus(visibleItems);\n    };\n    timeline.on(\"scroll\", debounce(groupFocus, 200));\n    // Enabling the next line leads to a continuous scroll since calling focus might scroll vertically even if it shouldn't\n    // timeline.on(\"scrollSide\", debounce(groupFocus, 200));\n\n    return () => {\n      // Cleanup\n      timeline.destroy();\n    };\n  }, []); // Empty dependency array ensures useEffect runs only once after the initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: timelineContainerRef,\n    id: \"visualization\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n};\n_s(MyTimelineComponent, \"3X3+PRVluo27mrFtwK629iExOdU=\");\n_c = MyTimelineComponent;\nexport default MyTimelineComponent;\nvar _c;\n$RefreshReg$(_c, \"MyTimelineComponent\");","map":{"version":3,"names":["React","useEffect","useRef","vis","jsxDEV","_jsxDEV","MyTimelineComponent","_s","timelineContainerRef","timeline","showVisibleGroups","visibleGroups","getVisibleGroups","document","getElementById","innerHTML","now","Date","options","stack","maxHeight","horizontalScroll","verticalScroll","zoomKey","start","end","orientation","axis","item","groups","DataSet","items","count","i","Math","floor","random","add","id","content","order","group","type","Timeline","current","setGroups","setItems","debounce","func","wait","timeout","args","clearTimeout","setTimeout","apply","groupFocus","e","visibleItems","reduce","res","groupId","itemSet","concat","Object","keys","focus","on","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MOA/jhk/reactTest/client/src/visChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport vis from 'vis-timeline';\r\n\r\nconst MyTimelineComponent = () => {\r\n  const timelineContainerRef = useRef(null);\r\n  let timeline = null;\r\n\r\n  const showVisibleGroups = () => {\r\n    const visibleGroups = timeline.getVisibleGroups();\r\n    document.getElementById(\"visibleGroupsContainer\").innerHTML = \"\";\r\n    document.getElementById(\"visibleGroupsContainer\").innerHTML += visibleGroups;\r\n  };\r\n\r\n  const now = Date.now();\r\n\r\n  const options = {\r\n    stack: true,\r\n    maxHeight: 640,\r\n    horizontalScroll: false,\r\n    verticalScroll: true,\r\n    zoomKey: \"ctrlKey\",\r\n    start: now - 1000 * 60 * 60 * 24 * 3,\r\n    end: now + 1000 * 60 * 60 * 24 * 21,\r\n    orientation: {\r\n      axis: \"both\",\r\n      item: \"top\",\r\n    },\r\n  };\r\n\r\n  const groups = new vis.DataSet();\r\n  const items = new vis.DataSet();\r\n\r\n  const count = 300;\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const start = now + 1000 * 60 * 60 * 24 * (i + Math.floor(Math.random() * 7));\r\n    const end = start + 1000 * 60 * 60 * 24 * (1 + Math.floor(Math.random() * 5));\r\n    \r\n\r\n    groups.add({\r\n      id: i,\r\n      content: \"Task \" + i,\r\n      order: i,\r\n    });\r\n\r\n    items.add({\r\n      id: i,\r\n      group: i,\r\n      start: start,\r\n      end: end,\r\n      type: \"range\",\r\n      content: \"Item \" + i,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // create a Timeline\r\n    timeline = new vis.Timeline(timelineContainerRef.current, null, options);\r\n    timeline.setGroups(groups);\r\n    timeline.setItems(items);\r\n\r\n    const debounce = (func, wait = 100) => {\r\n      let timeout;\r\n      return function (...args) {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n          func.apply(this, args);\r\n        }, wait);\r\n      };\r\n    };\r\n\r\n    const groupFocus = (e) => {\r\n      const visibleGroups = timeline.getVisibleGroups();\r\n      const visibleItems = visibleGroups.reduce((res, groupId) => {\r\n        const group = timeline.itemSet.groups[groupId];\r\n        if (group.items) {\r\n          res = res.concat(Object.keys(group.items));\r\n        }\r\n        return res;\r\n      }, []);\r\n      timeline.focus(visibleItems);\r\n    };\r\n\r\n    timeline.on(\"scroll\", debounce(groupFocus, 200));\r\n    // Enabling the next line leads to a continuous scroll since calling focus might scroll vertically even if it shouldn't\r\n    // timeline.on(\"scrollSide\", debounce(groupFocus, 200));\r\n\r\n    return () => {\r\n      // Cleanup\r\n      timeline.destroy();\r\n    };\r\n  }, []); // Empty dependency array ensures useEffect runs only once after the initial render\r\n\r\n  return <div ref={timelineContainerRef} id=\"visualization\" />;\r\n};\r\n\r\nexport default MyTimelineComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}