{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOA\\\\jhk\\\\reactTest\\\\client\\\\src\\\\visChart2.js\";\nimport React, { Component } from \"react\";\nimport { timeline } from \"vis-timeline/standalone\";\nimport \"vis-timeline/styles/vis-timeline-graph2d.css\";\nimport vis from \"vis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass VisChart2 extends Component {\n  componentDidMount() {\n    this.createTimeline();\n  }\n  createTimeline() {\n    // Your data and options for the timeline\n    const container = document.getElementById(\"visualization\");\n    const groups = new vis.DataSet([{\n      id: 0,\n      content: \"Group 1\"\n    }, {\n      id: 1,\n      content: \"Group 2\"\n    }]);\n    const items = new vis.DataSet([{\n      id: 0,\n      group: 0,\n      content: \"Item 1\",\n      start: \"2023-01-01\"\n    }, {\n      id: 1,\n      group: 1,\n      content: \"Item 2\",\n      start: \"2023-01-05\"\n    }]);\n    const options = {\n      // Your timeline options\n    };\n\n    // Create a Timeline\n    const timelineInstance = new timeline.Timeline(container, items, groups, options);\n\n    // Optional: You can store the timeline instance in the component state if needed\n    this.setState({\n      timelineInstance\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Timeline visible Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.showVisibleGroups(),\n        children: \"Show current visible items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"visible groups:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"visibleGroupsContainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"(Scroll with the mouse and see the items being focused automatically on the timeline)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  showVisibleGroups() {\n    // Your logic to show visible groups\n    const visibleGroups = this.state.timelineInstance.getVisibleGroups();\n    document.getElementById(\"visibleGroupsContainer\").innerText = visibleGroups.join(\", \");\n  }\n}\nexport default VisChart2;","map":{"version":3,"names":["React","Component","timeline","vis","jsxDEV","_jsxDEV","VisChart2","componentDidMount","createTimeline","container","document","getElementById","groups","DataSet","id","content","items","group","start","options","timelineInstance","Timeline","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","showVisibleGroups","visibleGroups","state","getVisibleGroups","innerText","join"],"sources":["C:/Users/MOA/jhk/reactTest/client/src/visChart2.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { timeline } from \"vis-timeline/standalone\";\r\nimport \"vis-timeline/styles/vis-timeline-graph2d.css\";\r\nimport vis from \"vis\";\r\n\r\nclass VisChart2 extends Component {\r\n  componentDidMount() {\r\n    this.createTimeline();\r\n  }\r\n\r\n  createTimeline() {\r\n    // Your data and options for the timeline\r\n    const container = document.getElementById(\"visualization\");\r\n\r\n    const groups = new vis.DataSet([\r\n      { id: 0, content: \"Group 1\" },\r\n      { id: 1, content: \"Group 2\" },\r\n    ]);\r\n\r\n    const items = new vis.DataSet([\r\n      { id: 0, group: 0, content: \"Item 1\", start: \"2023-01-01\" },\r\n      { id: 1, group: 1, content: \"Item 2\", start: \"2023-01-05\" },\r\n    ]);\r\n\r\n    const options = {\r\n      // Your timeline options\r\n    };\r\n\r\n    // Create a Timeline\r\n    const timelineInstance = new timeline.Timeline(container, items, groups, options);\r\n\r\n    // Optional: You can store the timeline instance in the component state if needed\r\n    this.setState({ timelineInstance });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Timeline visible Groups</h1>\r\n        <button onClick={() => this.showVisibleGroups()}>Show current visible items</button>\r\n        <div>\r\n          <h2>visible groups:</h2>\r\n          <h3 id=\"visibleGroupsContainer\"></h3>\r\n          <h2>(Scroll with the mouse and see the items being focused automatically on the timeline)</h2>\r\n        </div>\r\n        <div id=\"visualization\"></div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showVisibleGroups() {\r\n    // Your logic to show visible groups\r\n    const visibleGroups = this.state.timelineInstance.getVisibleGroups();\r\n    document.getElementById(\"visibleGroupsContainer\").innerText = visibleGroups.join(\", \");\r\n  }\r\n}\r\n\r\nexport default VisChart2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}